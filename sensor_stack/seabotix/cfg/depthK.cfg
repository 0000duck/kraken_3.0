#!/usr/bin/env python
PACKAGE = "seabotix"

import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("Kpl", double_t, 0, "Kp value", 0, 0, 100)
gen.add("Kdl", double_t, 0, "A double parameter",0, 0, 100)
gen.add("Kil", double_t, 0, "A double parameter",0, 0, 100)

gen.add("Kpr", double_t, 0, "Kp value", 0, 0, 100)
gen.add("Kdr", double_t, 0, "A double parameter",0, 0, 100)
gen.add("Kir", double_t, 0, "A double parameter",0, 0, 100)

gen.add("Kpb", double_t, 0, "Kp value", 0, 0, 100)
gen.add("Kdb", double_t, 0, "A double parameter",0, 0, 100)
gen.add("Kib", double_t, 0, "A double parameter",0, 0, 100)

gen.add("Kpt", double_t, 0, "Kp value", 0, 0, 100)
gen.add("Kdt", double_t, 0, "A double parameter",0, 0, 100)
gen.add("Kit", double_t, 0, "A double parameter",0, 0, 100)



# gen.add("bool_param", bool_t, 0, "A Boolean parameter", True)

# size_enum = gen.enum([ gen.const("Small", int_t, 0, "A small constant"),
#                   gen.const("Medium", int_t, 1, "A medium constant"),
#                   gen.const("Large", int_t, 2, "A large constant"),
#                   gen.const("ExtraLarge", int_t, 3, "An extra large constant") ],
#                   "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "seabotix", "k_changer"))
