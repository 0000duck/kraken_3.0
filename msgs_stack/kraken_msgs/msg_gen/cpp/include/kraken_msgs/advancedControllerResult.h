/* Auto-generated by genmsg_cpp for file /home/prudhvi/ros_ws/kraken_msgs/msg/advancedControllerResult.msg */
#ifndef KRAKEN_MSGS_MESSAGE_ADVANCEDCONTROLLERRESULT_H
#define KRAKEN_MSGS_MESSAGE_ADVANCEDCONTROLLERRESULT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace kraken_msgs
{
template <class ContainerAllocator>
struct advancedControllerResult_ {
  typedef advancedControllerResult_<ContainerAllocator> Type;

  advancedControllerResult_()
  : final_x(0.0)
  , final_y(0.0)
  , final_z(0.0)
  {
  }

  advancedControllerResult_(const ContainerAllocator& _alloc)
  : final_x(0.0)
  , final_y(0.0)
  , final_z(0.0)
  {
  }

  typedef float _final_x_type;
  float final_x;

  typedef float _final_y_type;
  float final_y;

  typedef float _final_z_type;
  float final_z;


  typedef boost::shared_ptr< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::kraken_msgs::advancedControllerResult_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct advancedControllerResult
typedef  ::kraken_msgs::advancedControllerResult_<std::allocator<void> > advancedControllerResult;

typedef boost::shared_ptr< ::kraken_msgs::advancedControllerResult> advancedControllerResultPtr;
typedef boost::shared_ptr< ::kraken_msgs::advancedControllerResult const> advancedControllerResultConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::kraken_msgs::advancedControllerResult_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace kraken_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::kraken_msgs::advancedControllerResult_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "eca74fd82b15e9b5ed37f12a99b95b9e";
  }

  static const char* value(const  ::kraken_msgs::advancedControllerResult_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xeca74fd82b15e9b5ULL;
  static const uint64_t static_value2 = 0xed37f12a99b95b9eULL;
};

template<class ContainerAllocator>
struct DataType< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "kraken_msgs/advancedControllerResult";
  }

  static const char* value(const  ::kraken_msgs::advancedControllerResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#result\n\
float32 final_x\n\
float32 final_y\n\
float32 final_z\n\
\n\
\n\
";
  }

  static const char* value(const  ::kraken_msgs::advancedControllerResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.final_x);
    stream.next(m.final_y);
    stream.next(m.final_z);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct advancedControllerResult_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::kraken_msgs::advancedControllerResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::kraken_msgs::advancedControllerResult_<ContainerAllocator> & v) 
  {
    s << indent << "final_x: ";
    Printer<float>::stream(s, indent + "  ", v.final_x);
    s << indent << "final_y: ";
    Printer<float>::stream(s, indent + "  ", v.final_y);
    s << indent << "final_z: ";
    Printer<float>::stream(s, indent + "  ", v.final_z);
  }
};


} // namespace message_operations
} // namespace ros

#endif // KRAKEN_MSGS_MESSAGE_ADVANCEDCONTROLLERRESULT_H

